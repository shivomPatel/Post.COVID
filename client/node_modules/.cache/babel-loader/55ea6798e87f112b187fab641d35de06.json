{"ast":null,"code":"var _jsxFileName = \"/Users/Shivom/Desktop/Post.COVID4/client/src/pages/Creation/Creation.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport Navbar from \"../components/Navbar/navbar\";\nimport Tabs from \"../components/Tabs/Tabs\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport AddTodo from \"../containers/AddTodo\";\nimport VisibleTodoList from \"../containers/VisibleTodoList\";\nimport CovidChart from \"../components/CovidChart/CovidChart\";\nimport USTable from \"../components/USTable/USTable\";\nimport rootReducer from \"../reducers\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome/\";\nimport { faMapMarkerAlt, faHamburger, faPlane, faCalendarAlt, faUtensils, faImages, faInfoCircle } from \"@fortawesome/free-solid-svg-icons/\";\nimport \"../components/CreationMap/creationmap.css\";\nimport \"./creation.css\";\nconst persistedState = loadFromLocalStorage();\nexport const store = createStore(rootReducer, persistedState);\nconst seat_geek_client_id = \"MjEyMDE0MTh8MTU5MTE0NjEzMy45Nw\";\nconst zomato_key = \"a709f309de1a20ac8da79907af27d37c\";\n\nfunction loadFromLocalStorage(state) {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nclass Creation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateName = name => {\n      this.setState({\n        name: name\n      });\n    };\n\n    this.updateImage = image => {\n      this.setState({\n        list_image: image\n      });\n    };\n\n    this.onclickLocation = () => {\n      const {\n        infowindow\n      } = this.state;\n\n      const displayInfowindow = e => {\n        const {\n          markers\n        } = this.state;\n        const markerInd = markers.findIndex(m => m.title.toLowerCase() === e.target.innerText.toLowerCase());\n        this.populateInfoWindow(markers[markerInd], infowindow);\n      };\n\n      document.querySelector(\".locations-list\").addEventListener(\"click\", function (e) {\n        if (e.target && e.target.nodeName === \"LI\") {\n          displayInfowindow(e);\n        }\n      });\n    };\n\n    this.addLocation = newlocation => {\n      const {\n        google\n      } = this.props;\n      const {\n        infowindow,\n        bounds\n      } = this.state;\n      const newmarker = new google.maps.Marker({\n        position: {\n          lat: newlocation.location.lat,\n          lng: newlocation.location.lng\n        },\n        map: this.state.map,\n        title: newlocation.name,\n        icon: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n      });\n      newmarker.addListener(\"click\", () => {\n        this.populateInfoWindow(newmarker, infowindow);\n      });\n      newmarker.addListener(\"dblclick\", e => {\n        this.deletePlace(e);\n      });\n      this.setState(state => ({\n        markers: [...state.markers, newmarker]\n      }));\n      bounds.extend(newmarker.position);\n      this.state.map.fitBounds(bounds);\n      this.getNearbyPlaces(newlocation);\n      this.getRestaurants(newlocation);\n      this.getViews(newlocation);\n    };\n\n    this.deletePlace = e => {\n      let {\n        newLocations,\n        markers\n      } = this.state;\n      let markersArray = [];\n      let event;\n      let chosenOne = markers.filter(marker => {\n        event = e.va.currentTarget.title;\n\n        if (marker.title === event) {\n          return true;\n        } else {\n          markersArray.push(marker);\n          return false;\n        }\n      });\n\n      if (chosenOne.length > 0) {\n        newLocations = newLocations.filter(_location => _location.name.toLowerCase() !== e.va.currentTarget.title.toLowerCase());\n\n        if (newLocations.length >= 0) {\n          chosenOne[0].setMap(null);\n        }\n      }\n\n      this.setState({\n        markers: markersArray,\n        newLocations\n      });\n    };\n\n    this.populateInfoWindow = async (marker, infowindow) => {\n      if (infowindow.marker !== marker) {\n        marker.setAnimation(window.google.maps.Animation.BOUNCE);\n        const markerPlace = {\n          name: marker.title,\n          location: {\n            lat: marker.position.lat(),\n            lng: marker.position.lng()\n          }\n        };\n        this.getViews(markerPlace);\n        this.getRestaurants(markerPlace);\n        this.getNearbyPlaces(markerPlace);\n        this.setState({\n          place: markerPlace\n        });\n        infowindow.marker = marker;\n        infowindow.setContent(\"<div >\" + `<h2 style=\"color:black; text-align: center; padding-top: 20px;\">${marker.title}</h2><div align=\"center\"><a href='/learnmore?name=${marker.title}'>Learn more</a></div>`);\n        this.state.map.panTo(marker.position);\n        this.state.map.setZoom(17);\n        infowindow.open(this.map, marker); // Make sure the marker property is cleared if the infowindow is closed.\n\n        infowindow.addListener(\"closeclick\", function () {\n          infowindow.marker = null;\n          marker.setAnimation(null);\n        });\n      }\n    };\n\n    this.createRestaurants = async data => {\n      let res = [];\n\n      for (var i = 0; i < data.nearby_restaurants.length; i++) {\n        res.push( /*#__PURE__*/React.createElement(\"div\", {\n          key: i,\n          align: \"left\",\n          className: \"card-b\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-body\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }\n        }, data.nearby_restaurants[i].restaurant.name), /*#__PURE__*/React.createElement(\"h6\", {\n          style: {\n            color: \"black\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }\n        }, data.nearby_restaurants[i].restaurant.cuisines), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            marginBottom: \"20px\",\n            marginTop: \"10px\"\n          },\n          className: \"card-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          className: \"rating\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }\n        }, \"Rating:\", \" \"), /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"#f84969\",\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }\n        }, data.nearby_restaurants[i].restaurant.user_rating.aggregate_rating, \"/5.0\")), /*#__PURE__*/React.createElement(\"a\", {\n          href: data.nearby_restaurants[i].restaurant.url,\n          style: {\n            fontSize: \"11pt\"\n          },\n          className: \"visit-button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }\n        }, \"Visit Website\"), /*#__PURE__*/React.createElement(\"a\", {\n          href: data.nearby_restaurants[i].restaurant.menu_url,\n          className: \"btn b2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }\n        }, \"Menu\"))));\n      }\n\n      this.setState({\n        restaurants: res\n      });\n    };\n\n    this.getRestaurants = async place => {\n      if (place !== undefined) {\n        let lat = place.location.lat;\n        let lng = place.location.lng;\n        const response = await axios({\n          method: \"GET\",\n          url: `https://developers.zomato.com/api/v2.1/geocode?lat=${lat}&lon=${lng}`,\n          headers: {\n            \"user-key\": zomato_key,\n            \"content-type\": \"application/json\"\n          }\n        });\n        this.createRestaurants(response.data);\n      }\n    };\n\n    this.renderRestaurants = () => {\n      if (this.state.restaurants.length !== 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          className: \"place-length\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 11\n          }\n        }, \"Restaurants in\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n          className: \"place-strong\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }\n        }, this.state.nearby_search), \" \"), this.state.restaurants);\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          className: \"place-length\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 11\n          }\n        }, \"No Restaurants\"), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n          className: \"calendar-ico calendar-icon-color\",\n          icon: faUtensils,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"no-places-title\",\n          align: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"nope-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }\n        }, \"Make Search to Receive Restaurants\")));\n      }\n    };\n\n    this.getNearbyPlaces = async place => {\n      if (place !== undefined) {\n        const response = await axios({\n          method: \"GET\",\n          url: `https://api.seatgeek.com/2/events?lat=${place.location.lat}&lon=${place.location.lng}&range=50mi&client_id=${seat_geek_client_id}`\n        });\n        let res = [];\n\n        for (var i = 0; i < response.data.events.length; i++) {\n          let event = response.data.events[i];\n          let taxes = [];\n          let date = new Date(event.datetime_local);\n          let time_of_event = this.formatDate(event);\n\n          for (var j = 0; j < event.taxonomies.length; j++) {\n            taxes.push( /*#__PURE__*/React.createElement(\"span\", {\n              key: j,\n              className: \"types-creation\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 13\n              }\n            }, event.taxonomies[j].name, \" \"));\n          }\n\n          res.push( /*#__PURE__*/React.createElement(\"div\", {\n            key: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            align: \"left\",\n            className: \"card-b\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"card-body\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(\"h4\", {\n            style: {\n              color: \"black\"\n            },\n            className: \"event-title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }\n          }, event.title, \" \", /*#__PURE__*/React.createElement(\"span\", {\n            className: \"status-title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 19\n            }\n          }, event.is_open ? /*#__PURE__*/React.createElement(\"span\", {\n            className: \"open\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 23\n            }\n          }, \"Open\") : /*#__PURE__*/React.createElement(\"span\", {\n            className: \"closed\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 23\n            }\n          }, \"Closed\"))), /*#__PURE__*/React.createElement(\"h5\", {\n            className: \"event-taxes\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }\n          }, taxes), /*#__PURE__*/React.createElement(\"h5\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"type-title\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 19\n            }\n          }, \"Popularity: \"), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"popularity\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 19\n            }\n          }, (event.popularity * 100).toFixed(2), \"%\", \" \")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"progress\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"progress-bar\",\n            role: \"progressbar\",\n            \"aria-valuenow\": \"70\",\n            \"aria-valuemin\": \"0\",\n            \"aria-valuemax\": \"100\",\n            style: this.getPopStyle((event.popularity * 100).toFixed(2)),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 19\n            }\n          })), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"event-location\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }\n          }, event.venue.address, \", \", event.venue.display_location), /*#__PURE__*/React.createElement(\"a\", {\n            href: event.url,\n            style: {\n              fontSize: \"11pt\"\n            },\n            className: \"visit-button\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }\n          }, \"Visit Website\"), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"event-date\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }\n          }, date.toDateString(), \" - \", time_of_event))), /*#__PURE__*/React.createElement(\"hr\", {\n            className: \"hr-line\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 13\n            }\n          })));\n        }\n\n        this.setState({\n          nearby_search: place.name,\n          nearby_places: res\n        });\n      } else {}\n    };\n\n    this.getViews = async place => {\n      await fetch(`https://api.unsplash.com/search/photos?page=1&query=${place.name}`, {\n        headers: {\n          Authorization: \"Client-ID ed4ea3b388f4503fa9a5817e2e5250171fd92b3b61ff520ff9f6027cff251a67\"\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        this.setState({\n          imgs: data.results\n        });\n        this.updateImage(data.results[0].urls.large);\n      }).catch(err => {\n        console.log(\"Error happened during fetching!\", err);\n      });\n    };\n\n    this.renderViews = () => {\n      if (this.state.imgs.length !== 0) {\n        let arr = [];\n\n        for (var i = 0; i < this.state.imgs.length; i++) {\n          var img = this.state.imgs[i];\n          arr.push( /*#__PURE__*/React.createElement(\"div\", {\n            key: i,\n            align: \"center\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            width: \"500\",\n            height: \"auto\",\n            src: img.urls.regular,\n            key: img.id,\n            alt: \"images of the chosen place\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 13\n            }\n          })));\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          className: \"place-length\",\n          align: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 11\n          }\n        }, \"Views of\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n          className: \"place-strong\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }\n        }, this.state.nearby_search), \" \"), arr);\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"place-length\",\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 9\n        }\n      }, \"Views Unavailable\"), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"img-ico img-icon-color\",\n        icon: faImages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"no-places-title\",\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"nope-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }\n      }, \"Make Search to Receive Images\")));\n    };\n\n    this.state = {\n      name: \"\",\n      newLocations: [],\n      locations: [{\n        name: \"Atlanta\",\n        location: {\n          lat: 33.774483,\n          lng: -84.382849\n        }\n      }, {\n        name: \"Belize\",\n        location: {\n          lat: 17.490481,\n          lng: -88.202213\n        }\n      }, {\n        name: \"Cancun\",\n        location: {\n          lat: 21.165197,\n          lng: -86.827264\n        }\n      }, {\n        name: \"Cape Canaveral\",\n        location: {\n          lat: 28.392157,\n          lng: -80.596978\n        }\n      }, {\n        name: \"Costa Maya\",\n        location: {\n          lat: 18.735196,\n          lng: -87.691022\n        }\n      }, {\n        name: \"Cozumel\",\n        location: {\n          lat: 20.508578,\n          lng: -86.947737\n        }\n      }, {\n        name: \"Dallas\",\n        location: {\n          lat: 32.838814,\n          lng: -96.786518\n        }\n      }, {\n        name: \"Grand Turk\",\n        location: {\n          lat: 21.428566,\n          lng: -71.143985\n        }\n      }, {\n        name: \"Green Cove Springs\",\n        location: {\n          lat: 29.991212,\n          lng: -81.689631\n        }\n      }, {\n        name: \"Jacksonville\",\n        location: {\n          lat: 30.274438,\n          lng: -81.388347\n        }\n      }, {\n        name: \"Miami\",\n        location: {\n          lat: 25.774763,\n          lng: -80.130467\n        }\n      }, {\n        name: \"Nassau\",\n        location: {\n          lat: 25.078643,\n          lng: -77.338089\n        }\n      }, {\n        name: \"New York\",\n        location: {\n          lat: 40.736701,\n          lng: -73.989334\n        }\n      }, {\n        name: \"Nocatee\",\n        location: {\n          lat: 30.104096,\n          lng: -81.430318\n        }\n      }, {\n        name: \"Orlando\",\n        location: {\n          lat: 28.546863,\n          lng: -81.373917\n        }\n      }, {\n        name: \"Roatan\",\n        location: {\n          lat: 16.357849,\n          lng: -86.442765\n        }\n      }, {\n        name: \"Saint-Martin\",\n        location: {\n          lat: 18.0308266,\n          lng: -63.0736329\n        }\n      }, {\n        name: \"St Augustine\",\n        location: {\n          lat: 29.906616,\n          lng: -81.314784\n        }\n      }, {\n        name: \"St Thomas\",\n        location: {\n          lat: 18.339866,\n          lng: -64.9249165\n        }\n      }, {\n        name: \"Washington D.C.\",\n        location: {\n          lat: 38.89027,\n          lng: -77.008907\n        }\n      }],\n      markers: [],\n      infowindow: new this.props.google.maps.InfoWindow(),\n      map: null,\n      bounds: null,\n      add_place: null,\n      nearby_places: [],\n      restaurants: [],\n      imgs: [],\n      list_image: undefined,\n      value: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.loadMap();\n    this.onclickLocation();\n    store.subscribe(() => saveToLocalStorage(store.getState()));\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      const that = this;\n      const {\n        google\n      } = this.props;\n      const maps = google.maps;\n      const mapRef = this.refs.map;\n      const node = ReactDOM.findDOMNode(mapRef);\n      const mapConfig = Object.assign({}, {\n        mapTypeId: \"roadmap\"\n      });\n      const map = new maps.Map(node, mapConfig);\n      const input = document.getElementById(\"search-input\");\n      const autocomplete = new google.maps.places.Autocomplete(input);\n      const {\n        infowindow\n      } = this.state;\n      const bounds = new maps.LatLngBounds();\n      let markers = [];\n      this.state.locations.map(location => {\n        const marker = new google.maps.Marker({\n          position: {\n            lat: location.location.lat,\n            lng: location.location.lng\n          },\n          map: map,\n          title: location.name\n        });\n        markers.push(marker);\n        bounds.extend(marker.position);\n        marker.addListener(\"click\", () => {\n          that.populateInfoWindow(marker, infowindow);\n        });\n      });\n      map.fitBounds(bounds);\n      this.setState({\n        map,\n        markers,\n        bounds\n      }); // Bind the map's bounds (viewport) property to the autocomplete object,\n      // so that the autocomplete requests use the current map bounds for the\n      // bounds option in the request.\n\n      autocomplete.bindTo(\"bounds\", map); // Set the data fields to return when the user selects a place.\n\n      autocomplete.setFields([\"geometry\", \"name\"]);\n      autocomplete.addListener(\"place_changed\", () => {\n        infowindow.close();\n        const place = autocomplete.getPlace();\n\n        if (!place.geometry) {\n          // User entered the name of a Place that was not suggested and\n          // pressed the Enter key, or the Place Details request failed.\n          window.alert(\"No details available for input: '\" + place.name + \"'\");\n          return;\n        }\n\n        const lat = place.geometry.location.lat();\n        const lng = place.geometry.location.lng();\n        let newlocation = {\n          name: place.name,\n          location: {\n            lat: lat,\n            lng: lng\n          }\n        };\n        that.setState(state => ({\n          newLocations: [...state.newLocations, newlocation]\n        }));\n        that.addLocation(newlocation);\n        this.setState({\n          place: newlocation\n        });\n        fetch(`https://api.unsplash.com/search/photos?page=1&query=${newlocation.name}`, {\n          headers: {\n            Authorization: \"Client-ID ed4ea3b388f4503fa9a5817e2e5250171fd92b3b61ff520ff9f6027cff251a67\"\n          }\n        }).then(response => {\n          return response.json();\n        }).then(data => {\n          this.setState({\n            list_image: data.results[0].urls.small\n          });\n        }).catch(err => {\n          console.log(\"Error happened during fetching!\", err);\n        });\n      });\n    }\n  }\n\n  formatDate(event) {\n    let date = new Date(event.datetime_local);\n    let f_date = date.toLocaleTimeString();\n    let date_substr = f_date.substring(0, f_date.lastIndexOf(\":\")) + \" \" + f_date.substring(f_date.length - 2);\n    return date_substr;\n  }\n\n  getPopStyle(value) {\n    var num = new Number(value);\n    var per = Math.round(num.toString());\n    var color; // Red - not very good\n\n    if (per <= 33) color = \"red\"; // Yellow - okay\n\n    if (per > 33 && per <= 66) color = \"yellow\"; // Green - pretty goog\n\n    if (per >= 66) color = \"#42f598\";\n    return {\n      backgroundColor: color,\n      width: per.toString() + \"%\"\n    };\n  }\n\n  renderNearbyPlaces() {\n    if (this.state.nearby_places.length !== 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"place-length\",\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }\n      }, \"Events in\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"place-strong\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }\n      }, this.state.nearby_search), \" \"), this.state.nearby_places);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"place-length\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }\n    }, \"No Events\"), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"calendar-ico calendar-icon-color\",\n      icon: faCalendarAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"no-places-title\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"nope-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }\n    }, \"Make Search to Receive Events\")));\n  }\n\n  render() {\n    let input;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"meta\", {\n      charSet: \"utf-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"script\", {\n      src: \"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"script\", {\n      src: \"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"script\", {\n      src: \"https://kit.fontawesome.com/a076d05399.js\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Navbar, {\n      items: [\"u\", \"u\", \"u\", \"u\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      align: \"left\",\n      className: \"back-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        paddingLeft: \"15px\",\n        paddingRight: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        float: \"left\",\n        marginRight: \"30px\",\n        marginBottom: \"30px\",\n        borderStyle: \"none\",\n        borderRadius: \"5px\",\n        color: \"white\",\n        backgroundColor: \"#429ef5\",\n        fontSize: \"13pt\"\n      },\n      onClick: () => {\n        localStorage.clear();\n        window.location.href = \"/tripbuilder\";\n      },\n      className: \"Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 21\n      }\n    }, \"Exit\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        paddingLeft: \"15px\",\n        paddingRight: \"15px\",\n        paddingTop: \"5px\",\n        paddingBottom: \"5px\",\n        float: \"right\",\n        marginRight: \"30px\",\n        marginBottom: \"30px\",\n        borderStyle: \"none\",\n        borderRadius: \"5px\",\n        color: \"white\",\n        backgroundColor: \"#429ef5\",\n        fontSize: \"13pt\"\n      },\n      className: \"Button\",\n      onClick: () => {\n        window.location.href = \"/creation/tripSubmission\";\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 21\n      }\n    }, \"Submit Trip\")))), /*#__PURE__*/React.createElement(\"div\", {\n      align: \"left\",\n      className: \"tab-comp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-content\",\n      label: \"Trip Plan\",\n      marker: faPlane,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(VisibleTodoList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-content\",\n      label: \"Events\",\n      marker: faMapMarkerAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 19\n      }\n    }, this.renderNearbyPlaces()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-content\",\n      label: \"Food\",\n      marker: faHamburger,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 19\n      }\n    }, this.renderRestaurants()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-content\",\n      label: \"Views\",\n      marker: faImages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 19\n      }\n    }, this.renderViews()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-content\",\n      label: \"COVID Quick Look\",\n      marker: faInfoCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CovidChart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(USTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 23\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        marginTop: \"15px\",\n        marginRight: \"10px\"\n      },\n      role: \"search\",\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleValueChange,\n      id: \"search-input\",\n      className: \"search-input-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(AddTodo, {\n      imageURL: this.state.list_image,\n      place: this.state.place,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"locations-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      role: \"application\",\n      className: \"map-creation\",\n      ref: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 17\n      }\n    }, \"loading map...\"))))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCYqTOlIwQvYh30rp3riNLP137QWdTxzY4\"\n})(Creation);\nconnect()(AddTodo);","map":{"version":3,"sources":["/Users/Shivom/Desktop/Post.COVID4/client/src/pages/Creation/Creation.js"],"names":["React","Component","ReactDOM","axios","Navbar","Tabs","GoogleApiWrapper","createStore","Provider","AddTodo","VisibleTodoList","CovidChart","USTable","rootReducer","connect","FontAwesomeIcon","faMapMarkerAlt","faHamburger","faPlane","faCalendarAlt","faUtensils","faImages","faInfoCircle","persistedState","loadFromLocalStorage","store","seat_geek_client_id","zomato_key","state","serializedState","localStorage","getItem","undefined","JSON","parse","e","console","log","saveToLocalStorage","stringify","setItem","Creation","constructor","props","updateName","name","setState","updateImage","image","list_image","onclickLocation","infowindow","displayInfowindow","markers","markerInd","findIndex","m","title","toLowerCase","target","innerText","populateInfoWindow","document","querySelector","addEventListener","nodeName","addLocation","newlocation","google","bounds","newmarker","maps","Marker","position","lat","location","lng","map","icon","addListener","deletePlace","extend","fitBounds","getNearbyPlaces","getRestaurants","getViews","newLocations","markersArray","event","chosenOne","filter","marker","va","currentTarget","push","length","_location","setMap","setAnimation","window","Animation","BOUNCE","markerPlace","place","setContent","panTo","setZoom","open","createRestaurants","data","res","i","nearby_restaurants","color","restaurant","cuisines","marginBottom","marginTop","fontWeight","user_rating","aggregate_rating","url","fontSize","menu_url","restaurants","response","method","headers","renderRestaurants","nearby_search","events","taxes","date","Date","datetime_local","time_of_event","formatDate","j","taxonomies","is_open","popularity","toFixed","getPopStyle","venue","address","display_location","toDateString","nearby_places","fetch","Authorization","then","json","imgs","results","urls","large","catch","err","renderViews","arr","img","regular","id","locations","InfoWindow","add_place","value","componentDidMount","loadMap","subscribe","getState","that","mapRef","refs","node","findDOMNode","mapConfig","Object","assign","mapTypeId","Map","input","getElementById","autocomplete","places","Autocomplete","LatLngBounds","bindTo","setFields","close","getPlace","geometry","alert","small","f_date","toLocaleTimeString","date_substr","substring","lastIndexOf","num","Number","per","Math","round","toString","backgroundColor","width","renderNearbyPlaces","render","paddingLeft","paddingRight","paddingTop","paddingBottom","float","marginRight","borderStyle","borderRadius","clear","href","handleValueChange","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SACEC,cADF,EAEEC,WAFF,EAGEC,OAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,QANF,EAOEC,YAPF,QAQO,oCARP;AASA,OAAO,2CAAP;AACA,OAAO,gBAAP;AAEA,MAAMC,cAAc,GAAGC,oBAAoB,EAA3C;AACA,OAAO,MAAMC,KAAK,GAAGlB,WAAW,CAACM,WAAD,EAAcU,cAAd,CAAzB;AACP,MAAMG,mBAAmB,GAAG,gCAA5B;AACA,MAAMC,UAAU,GAAG,kCAAnB;;AAEA,SAASH,oBAAT,CAA8BI,KAA9B,EAAqC;AACnC,MAAI;AACF,UAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,QAAIF,eAAe,KAAK,IAAxB,EAA8B,OAAOG,SAAP;AAC9B,WAAOC,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAP;AACD,GAJD,CAIE,OAAOM,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAOH,SAAP;AACD;AACF;;AAED,SAASM,kBAAT,CAA4BV,KAA5B,EAAmC;AACjC,MAAI;AACF,UAAMC,eAAe,GAAGI,IAAI,CAACM,SAAL,CAAeX,KAAf,CAAxB;AACAE,IAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BX,eAA9B;AACD,GAHD,CAGE,OAAOM,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;;AAED,MAAMM,QAAN,SAAuBxC,SAAvB,CAAiC;AAC/ByC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA0DnBC,UA1DmB,GA0DLC,IAAD,IAAU;AACrB,WAAKC,QAAL,CAAc;AACZD,QAAAA,IAAI,EAAEA;AADM,OAAd;AAGD,KA9DkB;;AAAA,SA+DnBE,WA/DmB,GA+DJC,KAAD,IAAW;AACvB,WAAKF,QAAL,CAAc;AACZG,QAAAA,UAAU,EAAED;AADA,OAAd;AAGD,KAnEkB;;AAAA,SAkKnBE,eAlKmB,GAkKD,MAAM;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAiB,KAAKvB,KAA5B;;AAEA,YAAMwB,iBAAiB,GAAIjB,CAAD,IAAO;AAC/B,cAAM;AAAEkB,UAAAA;AAAF,YAAc,KAAKzB,KAAzB;AAEA,cAAM0B,SAAS,GAAGD,OAAO,CAACE,SAAR,CACfC,CAAD,IAAOA,CAAC,CAACC,KAAF,CAAQC,WAAR,OAA0BvB,CAAC,CAACwB,MAAF,CAASC,SAAT,CAAmBF,WAAnB,EADjB,CAAlB;AAIA,aAAKG,kBAAL,CAAwBR,OAAO,CAACC,SAAD,CAA/B,EAA4CH,UAA5C;AACD,OARD;;AASAW,MAAAA,QAAQ,CACLC,aADH,CACiB,iBADjB,EAEGC,gBAFH,CAEoB,OAFpB,EAE6B,UAAU7B,CAAV,EAAa;AACtC,YAAIA,CAAC,CAACwB,MAAF,IAAYxB,CAAC,CAACwB,MAAF,CAASM,QAAT,KAAsB,IAAtC,EAA4C;AAC1Cb,UAAAA,iBAAiB,CAACjB,CAAD,CAAjB;AACD;AACF,OANH;AAOD,KArLkB;;AAAA,SAsLnB+B,WAtLmB,GAsLJC,WAAD,IAAiB;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAa,KAAKzB,KAAxB;AACA,YAAM;AAAEQ,QAAAA,UAAF;AAAckB,QAAAA;AAAd,UAAyB,KAAKzC,KAApC;AAEA,YAAM0C,SAAS,GAAG,IAAIF,MAAM,CAACG,IAAP,CAAYC,MAAhB,CAAuB;AACvCC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,GAAG,EAAEP,WAAW,CAACQ,QAAZ,CAAqBD,GADlB;AAERE,UAAAA,GAAG,EAAET,WAAW,CAACQ,QAAZ,CAAqBC;AAFlB,SAD6B;AAKvCC,QAAAA,GAAG,EAAE,KAAKjD,KAAL,CAAWiD,GALuB;AAMvCpB,QAAAA,KAAK,EAAEU,WAAW,CAACtB,IANoB;AAOvCiC,QAAAA,IAAI,EAAE;AAPiC,OAAvB,CAAlB;AAUAR,MAAAA,SAAS,CAACS,WAAV,CAAsB,OAAtB,EAA+B,MAAM;AACnC,aAAKlB,kBAAL,CAAwBS,SAAxB,EAAmCnB,UAAnC;AACD,OAFD;AAIAmB,MAAAA,SAAS,CAACS,WAAV,CAAsB,UAAtB,EAAmC5C,CAAD,IAAO;AACvC,aAAK6C,WAAL,CAAiB7C,CAAjB;AACD,OAFD;AAIA,WAAKW,QAAL,CAAelB,KAAD,KAAY;AACxByB,QAAAA,OAAO,EAAE,CAAC,GAAGzB,KAAK,CAACyB,OAAV,EAAmBiB,SAAnB;AADe,OAAZ,CAAd;AAGAD,MAAAA,MAAM,CAACY,MAAP,CAAcX,SAAS,CAACG,QAAxB;AAEA,WAAK7C,KAAL,CAAWiD,GAAX,CAAeK,SAAf,CAAyBb,MAAzB;AACA,WAAKc,eAAL,CAAqBhB,WAArB;AACA,WAAKiB,cAAL,CAAoBjB,WAApB;AACA,WAAKkB,QAAL,CAAclB,WAAd;AACD,KArNkB;;AAAA,SAsNnBa,WAtNmB,GAsNJ7C,CAAD,IAAO;AACnB,UAAI;AAAEmD,QAAAA,YAAF;AAAgBjC,QAAAA;AAAhB,UAA4B,KAAKzB,KAArC;AACA,UAAI2D,YAAY,GAAG,EAAnB;AACA,UAAIC,KAAJ;AACA,UAAIC,SAAS,GAAGpC,OAAO,CAACqC,MAAR,CAAgBC,MAAD,IAAY;AACzCH,QAAAA,KAAK,GAAGrD,CAAC,CAACyD,EAAF,CAAKC,aAAL,CAAmBpC,KAA3B;;AACA,YAAIkC,MAAM,CAAClC,KAAP,KAAiB+B,KAArB,EAA4B;AAC1B,iBAAO,IAAP;AACD,SAFD,MAEO;AACLD,UAAAA,YAAY,CAACO,IAAb,CAAkBH,MAAlB;AACA,iBAAO,KAAP;AACD;AACF,OARe,CAAhB;;AASA,UAAIF,SAAS,CAACM,MAAV,GAAmB,CAAvB,EAA0B;AACxBT,QAAAA,YAAY,GAAGA,YAAY,CAACI,MAAb,CACZM,SAAD,IACEA,SAAS,CAACnD,IAAV,CAAea,WAAf,OACAvB,CAAC,CAACyD,EAAF,CAAKC,aAAL,CAAmBpC,KAAnB,CAAyBC,WAAzB,EAHW,CAAf;;AAKA,YAAI4B,YAAY,CAACS,MAAb,IAAuB,CAA3B,EAA8B;AAC5BN,UAAAA,SAAS,CAAC,CAAD,CAAT,CAAaQ,MAAb,CAAoB,IAApB;AACD;AACF;;AACD,WAAKnD,QAAL,CAAc;AACZO,QAAAA,OAAO,EAAEkC,YADG;AAEZD,QAAAA;AAFY,OAAd;AAID,KAjPkB;;AAAA,SAkPnBzB,kBAlPmB,GAkPE,OAAO8B,MAAP,EAAexC,UAAf,KAA8B;AACjD,UAAIA,UAAU,CAACwC,MAAX,KAAsBA,MAA1B,EAAkC;AAChCA,QAAAA,MAAM,CAACO,YAAP,CAAoBC,MAAM,CAAC/B,MAAP,CAAcG,IAAd,CAAmB6B,SAAnB,CAA6BC,MAAjD;AAEA,cAAMC,WAAW,GAAG;AAClBzD,UAAAA,IAAI,EAAE8C,MAAM,CAAClC,KADK;AAElBkB,UAAAA,QAAQ,EAAE;AACRD,YAAAA,GAAG,EAAEiB,MAAM,CAAClB,QAAP,CAAgBC,GAAhB,EADG;AAERE,YAAAA,GAAG,EAAEe,MAAM,CAAClB,QAAP,CAAgBG,GAAhB;AAFG;AAFQ,SAApB;AAOA,aAAKS,QAAL,CAAciB,WAAd;AACA,aAAKlB,cAAL,CAAoBkB,WAApB;AACA,aAAKnB,eAAL,CAAqBmB,WAArB;AACA,aAAKxD,QAAL,CAAc;AACZyD,UAAAA,KAAK,EAAED;AADK,SAAd;AAIAnD,QAAAA,UAAU,CAACwC,MAAX,GAAoBA,MAApB;AACAxC,QAAAA,UAAU,CAACqD,UAAX,CACE,WACG,mEAAkEb,MAAM,CAAClC,KAAM,qDAAoDkC,MAAM,CAAClC,KAAM,wBAFrJ;AAKA,aAAK7B,KAAL,CAAWiD,GAAX,CAAe4B,KAAf,CAAqBd,MAAM,CAAClB,QAA5B;AACA,aAAK7C,KAAL,CAAWiD,GAAX,CAAe6B,OAAf,CAAuB,EAAvB;AAEAvD,QAAAA,UAAU,CAACwD,IAAX,CAAgB,KAAK9B,GAArB,EAA0Bc,MAA1B,EA1BgC,CA2BhC;;AACAxC,QAAAA,UAAU,CAAC4B,WAAX,CAAuB,YAAvB,EAAqC,YAAY;AAC/C5B,UAAAA,UAAU,CAACwC,MAAX,GAAoB,IAApB;AACAA,UAAAA,MAAM,CAACO,YAAP,CAAoB,IAApB;AACD,SAHD;AAID;AACF,KApRkB;;AAAA,SAqRnBU,iBArRmB,GAqRC,MAAOC,IAAP,IAAgB;AAClC,UAAIC,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,kBAAL,CAAwBjB,MAA5C,EAAoDgB,CAAC,EAArD,EAAyD;AACvDD,QAAAA,GAAG,CAAChB,IAAJ,eACE;AAAK,UAAA,GAAG,EAAEiB,CAAV;AAAa,UAAA,KAAK,EAAC,MAAnB;AAA0B,UAAA,SAAS,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAI,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGJ,IAAI,CAACG,kBAAL,CAAwBD,CAAxB,EAA2BG,UAA3B,CAAsCrE,IADzC,CADF,eAIE;AAAI,UAAA,KAAK,EAAE;AAAEoE,YAAAA,KAAK,EAAE;AAAT,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGJ,IAAI,CAACG,kBAAL,CAAwBD,CAAxB,EAA2BG,UAA3B,CAAsCC,QADzC,CAJF,eAOE;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,YAAY,EAAE,MAAhB;AAAwBC,YAAAA,SAAS,EAAE;AAAnC,WADT;AAEE,UAAA,SAAS,EAAC,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE;AAAd,WAAb;AAAqC,UAAA,SAAS,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACU,GADV,CAJF,eAOE;AAAM,UAAA,KAAK,EAAE;AAAEL,YAAAA,KAAK,EAAE,SAAT;AAAoBK,YAAAA,UAAU,EAAE;AAAhC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEIT,IAAI,CAACG,kBAAL,CAAwBD,CAAxB,EAA2BG,UAA3B,CAAsCK,WAAtC,CACGC,gBAHP,SAPF,CAPF,eAsBE;AACE,UAAA,IAAI,EAAEX,IAAI,CAACG,kBAAL,CAAwBD,CAAxB,EAA2BG,UAA3B,CAAsCO,GAD9C;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAFT;AAGE,UAAA,SAAS,EAAC,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAtBF,eA6BE;AACE,UAAA,IAAI,EAAEb,IAAI,CAACG,kBAAL,CAAwBD,CAAxB,EAA2BG,UAA3B,CAAsCS,QAD9C;AAEE,UAAA,SAAS,EAAC,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BF,CADF,CADF;AAwCD;;AACD,WAAK7E,QAAL,CAAc;AACZ8E,QAAAA,WAAW,EAAEd;AADD,OAAd;AAGD,KApUkB;;AAAA,SAqUnB1B,cArUmB,GAqUF,MAAOmB,KAAP,IAAiB;AAChC,UAAIA,KAAK,KAAKvE,SAAd,EAAyB;AACvB,YAAI0C,GAAG,GAAG6B,KAAK,CAAC5B,QAAN,CAAeD,GAAzB;AACA,YAAIE,GAAG,GAAG2B,KAAK,CAAC5B,QAAN,CAAeC,GAAzB;AACA,cAAMiD,QAAQ,GAAG,MAAM1H,KAAK,CAAC;AAC3B2H,UAAAA,MAAM,EAAE,KADmB;AAE3BL,UAAAA,GAAG,EAAG,sDAAqD/C,GAAI,QAAOE,GAAI,EAF/C;AAG3BmD,UAAAA,OAAO,EAAE;AACP,wBAAYpG,UADL;AAEP,4BAAgB;AAFT;AAHkB,SAAD,CAA5B;AAQA,aAAKiF,iBAAL,CAAuBiB,QAAQ,CAAChB,IAAhC;AACD;AACF,KAnVkB;;AAAA,SAoVnBmB,iBApVmB,GAoVC,MAAM;AACxB,UAAI,KAAKpG,KAAL,CAAWgG,WAAX,CAAuB7B,MAAvB,KAAkC,CAAtC,EAAyC;AACvC,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAI,UAAA,SAAS,EAAC,cAAd;AAA6B,UAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACiB,GADjB,eAEE;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkC,KAAKnE,KAAL,CAAWqG,aAA7C,CAFF,EAEuE,GAFvE,CADF,EAKG,KAAKrG,KAAL,CAAWgG,WALd,CADF;AASD,OAVD,MAUO;AACL,4BACE;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAI,UAAA,SAAS,EAAC,cAAd;AAA6B,UAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAIE,oBAAC,eAAD;AACE,UAAA,SAAS,EAAC,kCADZ;AAEE,UAAA,IAAI,EAAExG,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,eAQE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,KAAK,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,CARF,CADF;AAcD;AACF,KA/WkB;;AAAA,SAsYnB+D,eAtYmB,GAsYD,MAAOoB,KAAP,IAAiB;AACjC,UAAIA,KAAK,KAAKvE,SAAd,EAAyB;AACvB,cAAM6F,QAAQ,GAAG,MAAM1H,KAAK,CAAC;AAC3B2H,UAAAA,MAAM,EAAE,KADmB;AAE3BL,UAAAA,GAAG,EAAG,yCAAwClB,KAAK,CAAC5B,QAAN,CAAeD,GAAI,QAAO6B,KAAK,CAAC5B,QAAN,CAAeC,GAAI,yBAAwBlD,mBAAoB;AAF5G,SAAD,CAA5B;AAIA,YAAIoF,GAAG,GAAG,EAAV;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,QAAQ,CAAChB,IAAT,CAAcqB,MAAd,CAAqBnC,MAAzC,EAAiDgB,CAAC,EAAlD,EAAsD;AACpD,cAAIvB,KAAK,GAAGqC,QAAQ,CAAChB,IAAT,CAAcqB,MAAd,CAAqBnB,CAArB,CAAZ;AACA,cAAIoB,KAAK,GAAG,EAAZ;AACA,cAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS7C,KAAK,CAAC8C,cAAf,CAAX;AACA,cAAIC,aAAa,GAAG,KAAKC,UAAL,CAAgBhD,KAAhB,CAApB;;AACA,eAAK,IAAIiD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjD,KAAK,CAACkD,UAAN,CAAiB3C,MAArC,EAA6C0C,CAAC,EAA9C,EAAkD;AAChDN,YAAAA,KAAK,CAACrC,IAAN,eACE;AAAM,cAAA,GAAG,EAAE2C,CAAX;AAAc,cAAA,SAAS,EAAC,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGjD,KAAK,CAACkD,UAAN,CAAiBD,CAAjB,EAAoB5F,IADvB,EAC6B,GAD7B,CADF;AAKD;;AACDiE,UAAAA,GAAG,CAAChB,IAAJ,eACE;AAAK,YAAA,GAAG,EAAEiB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAK,YAAA,KAAK,EAAC,MAAX;AAAkB,YAAA,SAAS,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAI,YAAA,KAAK,EAAE;AAAEE,cAAAA,KAAK,EAAE;AAAT,aAAX;AAA+B,YAAA,SAAS,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGzB,KAAK,CAAC/B,KADT,EACgB,GADhB,eAEE;AAAM,YAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG+B,KAAK,CAACmD,OAAN,gBACC;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAGC;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,CAFF,CADF,eAWE;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA6BR,KAA7B,CAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,CAAC3C,KAAK,CAACoD,UAAN,GAAmB,GAApB,EAAyBC,OAAzB,CAAiC,CAAjC,CADH,OACyC,GADzC,CAFF,CAZF,eAkBE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,IAAI,EAAC,aAFP;AAGE,6BAAc,IAHhB;AAIE,6BAAc,GAJhB;AAKE,6BAAc,KALhB;AAME,YAAA,KAAK,EAAE,KAAKC,WAAL,CACL,CAACtD,KAAK,CAACoD,UAAN,GAAmB,GAApB,EAAyBC,OAAzB,CAAiC,CAAjC,CADK,CANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAlBF,eA8BE;AAAG,YAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGrD,KAAK,CAACuD,KAAN,CAAYC,OADf,QAC0BxD,KAAK,CAACuD,KAAN,CAAYE,gBADtC,CA9BF,eAiCE;AACE,YAAA,IAAI,EAAEzD,KAAK,CAACiC,GADd;AAEE,YAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ,aAFT;AAGE,YAAA,SAAS,EAAC,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAjCF,eAwCE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGU,IAAI,CAACc,YAAL,EADH,SAC2BX,aAD3B,CAxCF,CADF,CADF,eA+CE;AAAI,YAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/CF,CADF;AAmDD;;AACD,aAAKzF,QAAL,CAAc;AACZmF,UAAAA,aAAa,EAAE1B,KAAK,CAAC1D,IADT;AAEZsG,UAAAA,aAAa,EAAErC;AAFH,SAAd;AAID,OA1ED,MA0EO,CACN;AACF,KAndkB;;AAAA,SA+enBzB,QA/emB,GA+eR,MAAOkB,KAAP,IAAiB;AAC1B,YAAM6C,KAAK,CACR,uDAAsD7C,KAAK,CAAC1D,IAAK,EADzD,EAET;AACEkF,QAAAA,OAAO,EAAE;AACPsB,UAAAA,aAAa,EACX;AAFK;AADX,OAFS,CAAL,CASHC,IATG,CASGzB,QAAD,IAAc;AAClB,eAAOA,QAAQ,CAAC0B,IAAT,EAAP;AACD,OAXG,EAYHD,IAZG,CAYGzC,IAAD,IAAU;AACd,aAAK/D,QAAL,CAAc;AACZ0G,UAAAA,IAAI,EAAE3C,IAAI,CAAC4C;AADC,SAAd;AAGA,aAAK1G,WAAL,CAAiB8D,IAAI,CAAC4C,OAAL,CAAa,CAAb,EAAgBC,IAAhB,CAAqBC,KAAtC;AACD,OAjBG,EAkBHC,KAlBG,CAkBIC,GAAD,IAAS;AACdzH,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CwH,GAA/C;AACD,OApBG,CAAN;AAqBD,KArgBkB;;AAAA,SAsgBnBC,WAtgBmB,GAsgBL,MAAM;AAClB,UAAI,KAAKlI,KAAL,CAAW4H,IAAX,CAAgBzD,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,YAAIgE,GAAG,GAAG,EAAV;;AAEA,aAAK,IAAIhD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnF,KAAL,CAAW4H,IAAX,CAAgBzD,MAApC,EAA4CgB,CAAC,EAA7C,EAAiD;AAC/C,cAAIiD,GAAG,GAAG,KAAKpI,KAAL,CAAW4H,IAAX,CAAgBzC,CAAhB,CAAV;AACAgD,UAAAA,GAAG,CAACjE,IAAJ,eACE;AAAK,YAAA,GAAG,EAAEiB,CAAV;AAAa,YAAA,KAAK,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AACE,YAAA,KAAK,EAAC,KADR;AAEE,YAAA,MAAM,EAAC,MAFT;AAGE,YAAA,GAAG,EAAEiD,GAAG,CAACN,IAAJ,CAASO,OAHhB;AAIE,YAAA,GAAG,EAAED,GAAG,CAACE,EAJX;AAKE,YAAA,GAAG,EAAC,4BALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF;AAWD;;AACD,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAI,UAAA,SAAS,EAAC,cAAd;AAA6B,UAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACW,GADX,eAEE;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkC,KAAKtI,KAAL,CAAWqG,aAA7C,CAFF,EAEuE,GAFvE,CADF,EAKG8B,GALH,CADF;AASD;;AACD,0BACE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAA6B,QAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAIE,oBAAC,eAAD;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,IAAI,EAAE1I,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,eAQE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,KAAK,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,CARF,CADF;AAcD,KAhjBkB;;AAEjB,SAAKO,KAAL,GAAa;AACXiB,MAAAA,IAAI,EAAE,EADK;AAEXyC,MAAAA,YAAY,EAAE,EAFH;AAGX6E,MAAAA,SAAS,EAAE,CACT;AAAEtH,QAAAA,IAAI,EAAE,SAAR;AAAmB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAA7B,OADS,EAET;AAAE/B,QAAAA,IAAI,EAAE,QAAR;AAAkB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAA5B,OAFS,EAGT;AAAE/B,QAAAA,IAAI,EAAE,QAAR;AAAkB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAA5B,OAHS,EAIT;AACE/B,QAAAA,IAAI,EAAE,gBADR;AAEE8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAFZ,OAJS,EAQT;AAAE/B,QAAAA,IAAI,EAAE,YAAR;AAAsB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAAhC,OARS,EAST;AAAE/B,QAAAA,IAAI,EAAE,SAAR;AAAmB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAA7B,OATS,EAUT;AAAE/B,QAAAA,IAAI,EAAE,QAAR;AAAkB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAA5B,OAVS,EAWT;AAAE/B,QAAAA,IAAI,EAAE,YAAR;AAAsB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAAhC,OAXS,EAYT;AACE/B,QAAAA,IAAI,EAAE,oBADR;AAEE8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAFZ,OAZS,EAgBT;AAAE/B,QAAAA,IAAI,EAAE,cAAR;AAAwB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAAlC,OAhBS,EAiBT;AAAE/B,QAAAA,IAAI,EAAE,OAAR;AAAiB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAA3B,OAjBS,EAkBT;AAAE/B,QAAAA,IAAI,EAAE,QAAR;AAAkB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAA5B,OAlBS,EAmBT;AAAE/B,QAAAA,IAAI,EAAE,UAAR;AAAoB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAA9B,OAnBS,EAoBT;AAAE/B,QAAAA,IAAI,EAAE,SAAR;AAAmB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAA7B,OApBS,EAqBT;AAAE/B,QAAAA,IAAI,EAAE,SAAR;AAAmB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAA7B,OArBS,EAsBT;AAAE/B,QAAAA,IAAI,EAAE,QAAR;AAAkB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAA5B,OAtBS,EAuBT;AACE/B,QAAAA,IAAI,EAAE,cADR;AAEE8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,UAAP;AAAmBE,UAAAA,GAAG,EAAE,CAAC;AAAzB;AAFZ,OAvBS,EA2BT;AAAE/B,QAAAA,IAAI,EAAE,cAAR;AAAwB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAAlC,OA3BS,EA4BT;AAAE/B,QAAAA,IAAI,EAAE,WAAR;AAAqB8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,SAAP;AAAkBE,UAAAA,GAAG,EAAE,CAAC;AAAxB;AAA/B,OA5BS,EA6BT;AACE/B,QAAAA,IAAI,EAAE,iBADR;AAEE8B,QAAAA,QAAQ,EAAE;AAAED,UAAAA,GAAG,EAAE,QAAP;AAAiBE,UAAAA,GAAG,EAAE,CAAC;AAAvB;AAFZ,OA7BS,CAHA;AAqCXvB,MAAAA,OAAO,EAAE,EArCE;AAsCXF,MAAAA,UAAU,EAAE,IAAI,KAAKR,KAAL,CAAWyB,MAAX,CAAkBG,IAAlB,CAAuB6F,UAA3B,EAtCD;AAuCXvF,MAAAA,GAAG,EAAE,IAvCM;AAwCXR,MAAAA,MAAM,EAAE,IAxCG;AAyCXgG,MAAAA,SAAS,EAAE,IAzCA;AA0CXlB,MAAAA,aAAa,EAAE,EA1CJ;AA2CXvB,MAAAA,WAAW,EAAE,EA3CF;AA4CX4B,MAAAA,IAAI,EAAE,EA5CK;AA6CXvG,MAAAA,UAAU,EAAEjB,SA7CD;AA8CXsI,MAAAA,KAAK,EAAEtI;AA9CI,KAAb;AAgDD;;AAEDuI,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL;AACA,SAAKtH,eAAL;AACAzB,IAAAA,KAAK,CAACgJ,SAAN,CAAgB,MAAMnI,kBAAkB,CAACb,KAAK,CAACiJ,QAAN,EAAD,CAAxC;AACD;;AAYDF,EAAAA,OAAO,GAAG;AACR,QAAI,KAAK7H,KAAL,IAAc,KAAKA,KAAL,CAAWyB,MAA7B,EAAqC;AACnC,YAAMuG,IAAI,GAAG,IAAb;AACA,YAAM;AAAEvG,QAAAA;AAAF,UAAa,KAAKzB,KAAxB;AACA,YAAM4B,IAAI,GAAGH,MAAM,CAACG,IAApB;AACA,YAAMqG,MAAM,GAAG,KAAKC,IAAL,CAAUhG,GAAzB;AACA,YAAMiG,IAAI,GAAG5K,QAAQ,CAAC6K,WAAT,CAAqBH,MAArB,CAAb;AACA,YAAMI,SAAS,GAAGC,MAAM,CAACC,MAAP,CAChB,EADgB,EAEhB;AACEC,QAAAA,SAAS,EAAE;AADb,OAFgB,CAAlB;AAMA,YAAMtG,GAAG,GAAG,IAAIN,IAAI,CAAC6G,GAAT,CAAaN,IAAb,EAAmBE,SAAnB,CAAZ;AACA,YAAMK,KAAK,GAAGvH,QAAQ,CAACwH,cAAT,CAAwB,cAAxB,CAAd;AACA,YAAMC,YAAY,GAAG,IAAInH,MAAM,CAACG,IAAP,CAAYiH,MAAZ,CAAmBC,YAAvB,CAAoCJ,KAApC,CAArB;AACA,YAAM;AAAElI,QAAAA;AAAF,UAAiB,KAAKvB,KAA5B;AACA,YAAMyC,MAAM,GAAG,IAAIE,IAAI,CAACmH,YAAT,EAAf;AAEA,UAAIrI,OAAO,GAAG,EAAd;AACA,WAAKzB,KAAL,CAAWuI,SAAX,CAAqBtF,GAArB,CAA0BF,QAAD,IAAc;AACrC,cAAMgB,MAAM,GAAG,IAAIvB,MAAM,CAACG,IAAP,CAAYC,MAAhB,CAAuB;AACpCC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,GAAG,EAAEC,QAAQ,CAACA,QAAT,CAAkBD,GAAzB;AAA8BE,YAAAA,GAAG,EAAED,QAAQ,CAACA,QAAT,CAAkBC;AAArD,WAD0B;AAEpCC,UAAAA,GAAG,EAAEA,GAF+B;AAGpCpB,UAAAA,KAAK,EAAEkB,QAAQ,CAAC9B;AAHoB,SAAvB,CAAf;AAKAQ,QAAAA,OAAO,CAACyC,IAAR,CAAaH,MAAb;AACAtB,QAAAA,MAAM,CAACY,MAAP,CAAcU,MAAM,CAAClB,QAArB;AACAkB,QAAAA,MAAM,CAACZ,WAAP,CAAmB,OAAnB,EAA4B,MAAM;AAChC4F,UAAAA,IAAI,CAAC9G,kBAAL,CAAwB8B,MAAxB,EAAgCxC,UAAhC;AACD,SAFD;AAGD,OAXD;AAYA0B,MAAAA,GAAG,CAACK,SAAJ,CAAcb,MAAd;AACA,WAAKvB,QAAL,CAAc;AACZ+B,QAAAA,GADY;AAEZxB,QAAAA,OAFY;AAGZgB,QAAAA;AAHY,OAAd,EAhCmC,CAsCnC;AACA;AACA;;AACAkH,MAAAA,YAAY,CAACI,MAAb,CAAoB,QAApB,EAA8B9G,GAA9B,EAzCmC,CA2CnC;;AACA0G,MAAAA,YAAY,CAACK,SAAb,CAAuB,CAAC,UAAD,EAAa,MAAb,CAAvB;AAEAL,MAAAA,YAAY,CAACxG,WAAb,CAAyB,eAAzB,EAA0C,MAAM;AAC9C5B,QAAAA,UAAU,CAAC0I,KAAX;AACA,cAAMtF,KAAK,GAAGgF,YAAY,CAACO,QAAb,EAAd;;AAEA,YAAI,CAACvF,KAAK,CAACwF,QAAX,EAAqB;AACnB;AACA;AACA5F,UAAAA,MAAM,CAAC6F,KAAP,CAAa,sCAAsCzF,KAAK,CAAC1D,IAA5C,GAAmD,GAAhE;AACA;AACD;;AACD,cAAM6B,GAAG,GAAG6B,KAAK,CAACwF,QAAN,CAAepH,QAAf,CAAwBD,GAAxB,EAAZ;AACA,cAAME,GAAG,GAAG2B,KAAK,CAACwF,QAAN,CAAepH,QAAf,CAAwBC,GAAxB,EAAZ;AACA,YAAIT,WAAW,GAAG;AAChBtB,UAAAA,IAAI,EAAE0D,KAAK,CAAC1D,IADI;AAEhB8B,UAAAA,QAAQ,EAAE;AAAED,YAAAA,GAAG,EAAEA,GAAP;AAAYE,YAAAA,GAAG,EAAEA;AAAjB;AAFM,SAAlB;AAIA+F,QAAAA,IAAI,CAAC7H,QAAL,CAAelB,KAAD,KAAY;AACxB0D,UAAAA,YAAY,EAAE,CAAC,GAAG1D,KAAK,CAAC0D,YAAV,EAAwBnB,WAAxB;AADU,SAAZ,CAAd;AAGAwG,QAAAA,IAAI,CAACzG,WAAL,CAAiBC,WAAjB;AACA,aAAKrB,QAAL,CAAc;AACZyD,UAAAA,KAAK,EAAEpC;AADK,SAAd;AAIAiF,QAAAA,KAAK,CACF,uDAAsDjF,WAAW,CAACtB,IAAK,EADrE,EAEH;AACEkF,UAAAA,OAAO,EAAE;AACPsB,YAAAA,aAAa,EACX;AAFK;AADX,SAFG,CAAL,CASGC,IATH,CASSzB,QAAD,IAAc;AAClB,iBAAOA,QAAQ,CAAC0B,IAAT,EAAP;AACD,SAXH,EAYGD,IAZH,CAYSzC,IAAD,IAAU;AACd,eAAK/D,QAAL,CAAc;AACZG,YAAAA,UAAU,EAAE4D,IAAI,CAAC4C,OAAL,CAAa,CAAb,EAAgBC,IAAhB,CAAqBuC;AADrB,WAAd;AAGD,SAhBH,EAiBGrC,KAjBH,CAiBUC,GAAD,IAAS;AACdzH,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CwH,GAA/C;AACD,SAnBH;AAoBD,OA5CD;AA6CD;AACF;;AA+MDrB,EAAAA,UAAU,CAAChD,KAAD,EAAQ;AAChB,QAAI4C,IAAI,GAAG,IAAIC,IAAJ,CAAS7C,KAAK,CAAC8C,cAAf,CAAX;AACA,QAAI4D,MAAM,GAAG9D,IAAI,CAAC+D,kBAAL,EAAb;AACA,QAAIC,WAAW,GACbF,MAAM,CAACG,SAAP,CAAiB,CAAjB,EAAoBH,MAAM,CAACI,WAAP,CAAmB,GAAnB,CAApB,IACA,GADA,GAEAJ,MAAM,CAACG,SAAP,CAAiBH,MAAM,CAACnG,MAAP,GAAgB,CAAjC,CAHF;AAIA,WAAOqG,WAAP;AACD;;AACDtD,EAAAA,WAAW,CAACwB,KAAD,EAAQ;AACjB,QAAIiC,GAAG,GAAG,IAAIC,MAAJ,CAAWlC,KAAX,CAAV;AACA,QAAImC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAACK,QAAJ,EAAX,CAAV;AACA,QAAI3F,KAAJ,CAHiB,CAIjB;;AACA,QAAIwF,GAAG,IAAI,EAAX,EAAexF,KAAK,GAAG,KAAR,CALE,CAMjB;;AACA,QAAIwF,GAAG,GAAG,EAAN,IAAYA,GAAG,IAAI,EAAvB,EAA2BxF,KAAK,GAAG,QAAR,CAPV,CAQjB;;AACA,QAAIwF,GAAG,IAAI,EAAX,EAAexF,KAAK,GAAG,SAAR;AAEf,WAAO;AAAE4F,MAAAA,eAAe,EAAE5F,KAAnB;AAA0B6F,MAAAA,KAAK,EAAEL,GAAG,CAACG,QAAJ,KAAiB;AAAlD,KAAP;AACD;;AA+EDG,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAKnL,KAAL,CAAWuH,aAAX,CAAyBpD,MAAzB,KAAoC,CAAxC,EAA2C;AACzC,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAA6B,QAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACY,GADZ,eAEE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC,KAAKnE,KAAL,CAAWqG,aAA7C,CAFF,EAEuE,GAFvE,CADF,EAKG,KAAKrG,KAAL,CAAWuH,aALd,CADF;AASD;;AACD,wBACE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAA6B,MAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE,oBAAC,eAAD;AACE,MAAA,SAAS,EAAC,kCADZ;AAEE,MAAA,IAAI,EAAEhI,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAQE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,CARF,CADF;AAcD;;AAoED6L,EAAAA,MAAM,GAAG;AACP,QAAI3B,KAAJ;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,qCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAQ,MAAA,GAAG,EAAC,kEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAQ,MAAA,GAAG,EAAC,qEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE;AAAQ,MAAA,GAAG,EAAC,2CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAQE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAkB,MAAA,SAAS,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,KAAK,EAAE;AAAEjE,QAAAA,YAAY,EAAE;AAAhB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAE;AACL6F,QAAAA,WAAW,EAAE,MADR;AAELC,QAAAA,YAAY,EAAE,MAFT;AAGLC,QAAAA,UAAU,EAAE,KAHP;AAILC,QAAAA,aAAa,EAAE,KAJV;AAKLC,QAAAA,KAAK,EAAE,MALF;AAMLC,QAAAA,WAAW,EAAE,MANR;AAOLlG,QAAAA,YAAY,EAAE,MAPT;AAQLmG,QAAAA,WAAW,EAAE,MARR;AASLC,QAAAA,YAAY,EAAE,KATT;AAULvG,QAAAA,KAAK,EAAE,OAVF;AAWL4F,QAAAA,eAAe,EAAE,SAXZ;AAYLnF,QAAAA,QAAQ,EAAE;AAZL,OADT;AAeE,MAAA,OAAO,EAAE,MAAM;AACb5F,QAAAA,YAAY,CAAC2L,KAAb;AACAtH,QAAAA,MAAM,CAACxB,QAAP,CAAgB+I,IAAhB,GAAuB,cAAvB;AACD,OAlBH;AAmBE,MAAA,SAAS,EAAC,QAnBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAwBE;AACE,MAAA,KAAK,EAAE;AACLT,QAAAA,WAAW,EAAE,MADR;AAELC,QAAAA,YAAY,EAAE,MAFT;AAGLC,QAAAA,UAAU,EAAE,KAHP;AAILC,QAAAA,aAAa,EAAE,KAJV;AAKLC,QAAAA,KAAK,EAAE,OALF;AAMLC,QAAAA,WAAW,EAAE,MANR;AAOLlG,QAAAA,YAAY,EAAE,MAPT;AAQLmG,QAAAA,WAAW,EAAE,MARR;AASLC,QAAAA,YAAY,EAAE,KATT;AAULvG,QAAAA,KAAK,EAAE,OAVF;AAWL4F,QAAAA,eAAe,EAAE,SAXZ;AAYLnF,QAAAA,QAAQ,EAAE;AAZL,OADT;AAeE,MAAA,SAAS,EAAC,QAfZ;AAgBE,MAAA,OAAO,EAAE,MAAM;AACbvB,QAAAA,MAAM,CAACxB,QAAP,CAAgB+I,IAAhB,GAAuB,0BAAvB;AACD,OAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAxBF,CADF,CADF,CADF,eAoDE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAkB,MAAA,SAAS,EAAC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,MAAM,EAAExM,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEO,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CADF,eAUE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,MAAM,EAAET,cAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAK+L,kBAAL,EALH,CAVF,eAiBE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,MAAM,EAAE9L,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAK+G,iBAAL,EALH,CAjBF,eAwBE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAC,OAAnC;AAA2C,MAAA,MAAM,EAAE3G,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKyI,WAAL,EADH,CAxBF,eA2BE;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,KAAK,EAAC,kBAFR;AAGE,MAAA,MAAM,EAAExI,YAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME;AAAK,MAAA,KAAK,EAAE;AAAE+F,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CA3BF,CADF,CApDF,CADF,eA8FE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAE;AAAEA,QAAAA,SAAS,EAAE,MAAb;AAAqBiG,QAAAA,WAAW,EAAE;AAAlC,OADT;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAE,KAAK1L,KAAL,CAAW0I,KAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKqD,iBALjB;AAME,MAAA,EAAE,EAAC,cANL;AAOE,MAAA,SAAS,EAAC,kBAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAElM,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWqB,UADvB;AAEE,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAW2E,KAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAVF,eAkBE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,eAmBE;AAAK,MAAA,IAAI,EAAC,aAAV;AAAwB,MAAA,SAAS,EAAC,cAAlC;AAAiD,MAAA,GAAG,EAAC,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAnBF,CADF,CA9FF,CARF,CADF,CADF;AAqID;;AA1rB8B;;AA6rBjC,eAAejG,gBAAgB,CAAC;AAC9BsN,EAAAA,MAAM,EAAE;AADsB,CAAD,CAAhB,CAEZnL,QAFY,CAAf;AAIA3B,OAAO,GAAGL,OAAH,CAAP","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport Navbar from \"../components/Navbar/navbar\";\nimport Tabs from \"../components/Tabs/Tabs\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport AddTodo from \"../containers/AddTodo\";\nimport VisibleTodoList from \"../containers/VisibleTodoList\";\nimport CovidChart from \"../components/CovidChart/CovidChart\";\nimport USTable from \"../components/USTable/USTable\";\nimport rootReducer from \"../reducers\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome/\";\nimport {\n  faMapMarkerAlt,\n  faHamburger,\n  faPlane,\n  faCalendarAlt,\n  faUtensils,\n  faImages,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons/\";\nimport \"../components/CreationMap/creationmap.css\";\nimport \"./creation.css\";\n\nconst persistedState = loadFromLocalStorage();\nexport const store = createStore(rootReducer, persistedState);\nconst seat_geek_client_id = \"MjEyMDE0MTh8MTU5MTE0NjEzMy45Nw\";\nconst zomato_key = \"a709f309de1a20ac8da79907af27d37c\";\n\nfunction loadFromLocalStorage(state) {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) return undefined;\n    return JSON.parse(serializedState);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state\", serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nclass Creation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      newLocations: [],\n      locations: [\n        { name: \"Atlanta\", location: { lat: 33.774483, lng: -84.382849 } },\n        { name: \"Belize\", location: { lat: 17.490481, lng: -88.202213 } },\n        { name: \"Cancun\", location: { lat: 21.165197, lng: -86.827264 } },\n        {\n          name: \"Cape Canaveral\",\n          location: { lat: 28.392157, lng: -80.596978 },\n        },\n        { name: \"Costa Maya\", location: { lat: 18.735196, lng: -87.691022 } },\n        { name: \"Cozumel\", location: { lat: 20.508578, lng: -86.947737 } },\n        { name: \"Dallas\", location: { lat: 32.838814, lng: -96.786518 } },\n        { name: \"Grand Turk\", location: { lat: 21.428566, lng: -71.143985 } },\n        {\n          name: \"Green Cove Springs\",\n          location: { lat: 29.991212, lng: -81.689631 },\n        },\n        { name: \"Jacksonville\", location: { lat: 30.274438, lng: -81.388347 } },\n        { name: \"Miami\", location: { lat: 25.774763, lng: -80.130467 } },\n        { name: \"Nassau\", location: { lat: 25.078643, lng: -77.338089 } },\n        { name: \"New York\", location: { lat: 40.736701, lng: -73.989334 } },\n        { name: \"Nocatee\", location: { lat: 30.104096, lng: -81.430318 } },\n        { name: \"Orlando\", location: { lat: 28.546863, lng: -81.373917 } },\n        { name: \"Roatan\", location: { lat: 16.357849, lng: -86.442765 } },\n        {\n          name: \"Saint-Martin\",\n          location: { lat: 18.0308266, lng: -63.0736329 },\n        },\n        { name: \"St Augustine\", location: { lat: 29.906616, lng: -81.314784 } },\n        { name: \"St Thomas\", location: { lat: 18.339866, lng: -64.9249165 } },\n        {\n          name: \"Washington D.C.\",\n          location: { lat: 38.89027, lng: -77.008907 },\n        },\n      ],\n      markers: [],\n      infowindow: new this.props.google.maps.InfoWindow(),\n      map: null,\n      bounds: null,\n      add_place: null,\n      nearby_places: [],\n      restaurants: [],\n      imgs: [],\n      list_image: undefined,\n      value: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.loadMap();\n    this.onclickLocation();\n    store.subscribe(() => saveToLocalStorage(store.getState()));\n  }\n\n  updateName = (name) => {\n    this.setState({\n      name: name,\n    });\n  };\n  updateImage = (image) => {\n    this.setState({\n      list_image: image,\n    });\n  };\n  loadMap() {\n    if (this.props && this.props.google) {\n      const that = this;\n      const { google } = this.props;\n      const maps = google.maps;\n      const mapRef = this.refs.map;\n      const node = ReactDOM.findDOMNode(mapRef);\n      const mapConfig = Object.assign(\n        {},\n        {\n          mapTypeId: \"roadmap\",\n        }\n      );\n      const map = new maps.Map(node, mapConfig);\n      const input = document.getElementById(\"search-input\");\n      const autocomplete = new google.maps.places.Autocomplete(input);\n      const { infowindow } = this.state;\n      const bounds = new maps.LatLngBounds();\n\n      let markers = [];\n      this.state.locations.map((location) => {\n        const marker = new google.maps.Marker({\n          position: { lat: location.location.lat, lng: location.location.lng },\n          map: map,\n          title: location.name,\n        });\n        markers.push(marker);\n        bounds.extend(marker.position);\n        marker.addListener(\"click\", () => {\n          that.populateInfoWindow(marker, infowindow);\n        });\n      });\n      map.fitBounds(bounds);\n      this.setState({\n        map,\n        markers,\n        bounds,\n      });\n\n      // Bind the map's bounds (viewport) property to the autocomplete object,\n      // so that the autocomplete requests use the current map bounds for the\n      // bounds option in the request.\n      autocomplete.bindTo(\"bounds\", map);\n\n      // Set the data fields to return when the user selects a place.\n      autocomplete.setFields([\"geometry\", \"name\"]);\n\n      autocomplete.addListener(\"place_changed\", () => {\n        infowindow.close();\n        const place = autocomplete.getPlace();\n\n        if (!place.geometry) {\n          // User entered the name of a Place that was not suggested and\n          // pressed the Enter key, or the Place Details request failed.\n          window.alert(\"No details available for input: '\" + place.name + \"'\");\n          return;\n        }\n        const lat = place.geometry.location.lat();\n        const lng = place.geometry.location.lng();\n        let newlocation = {\n          name: place.name,\n          location: { lat: lat, lng: lng },\n        };\n        that.setState((state) => ({\n          newLocations: [...state.newLocations, newlocation],\n        }));\n        that.addLocation(newlocation);\n        this.setState({\n          place: newlocation,\n        });\n\n        fetch(\n          `https://api.unsplash.com/search/photos?page=1&query=${newlocation.name}`,\n          {\n            headers: {\n              Authorization:\n                \"Client-ID ed4ea3b388f4503fa9a5817e2e5250171fd92b3b61ff520ff9f6027cff251a67\",\n            },\n          }\n        )\n          .then((response) => {\n            return response.json();\n          })\n          .then((data) => {\n            this.setState({\n              list_image: data.results[0].urls.small,\n            });\n          })\n          .catch((err) => {\n            console.log(\"Error happened during fetching!\", err);\n          });\n      });\n    }\n  }\n  onclickLocation = () => {\n    const { infowindow } = this.state;\n\n    const displayInfowindow = (e) => {\n      const { markers } = this.state;\n\n      const markerInd = markers.findIndex(\n        (m) => m.title.toLowerCase() === e.target.innerText.toLowerCase()\n      );\n\n      this.populateInfoWindow(markers[markerInd], infowindow);\n    };\n    document\n      .querySelector(\".locations-list\")\n      .addEventListener(\"click\", function (e) {\n        if (e.target && e.target.nodeName === \"LI\") {\n          displayInfowindow(e);\n        }\n      });\n  };\n  addLocation = (newlocation) => {\n    const { google } = this.props;\n    const { infowindow, bounds } = this.state;\n\n    const newmarker = new google.maps.Marker({\n      position: {\n        lat: newlocation.location.lat,\n        lng: newlocation.location.lng,\n      },\n      map: this.state.map,\n      title: newlocation.name,\n      icon: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n    });\n\n    newmarker.addListener(\"click\", () => {\n      this.populateInfoWindow(newmarker, infowindow);\n    });\n\n    newmarker.addListener(\"dblclick\", (e) => {\n      this.deletePlace(e);\n    });\n\n    this.setState((state) => ({\n      markers: [...state.markers, newmarker],\n    }));\n    bounds.extend(newmarker.position);\n\n    this.state.map.fitBounds(bounds);\n    this.getNearbyPlaces(newlocation);\n    this.getRestaurants(newlocation);\n    this.getViews(newlocation);\n  };\n  deletePlace = (e) => {\n    let { newLocations, markers } = this.state;\n    let markersArray = [];\n    let event;\n    let chosenOne = markers.filter((marker) => {\n      event = e.va.currentTarget.title;\n      if (marker.title === event) {\n        return true;\n      } else {\n        markersArray.push(marker);\n        return false;\n      }\n    });\n    if (chosenOne.length > 0) {\n      newLocations = newLocations.filter(\n        (_location) =>\n          _location.name.toLowerCase() !==\n          e.va.currentTarget.title.toLowerCase()\n      );\n      if (newLocations.length >= 0) {\n        chosenOne[0].setMap(null);\n      }\n    }\n    this.setState({\n      markers: markersArray,\n      newLocations,\n    });\n  };\n  populateInfoWindow = async (marker, infowindow) => {\n    if (infowindow.marker !== marker) {\n      marker.setAnimation(window.google.maps.Animation.BOUNCE);\n\n      const markerPlace = {\n        name: marker.title,\n        location: {\n          lat: marker.position.lat(),\n          lng: marker.position.lng(),\n        },\n      };\n      this.getViews(markerPlace);\n      this.getRestaurants(markerPlace);\n      this.getNearbyPlaces(markerPlace);\n      this.setState({\n        place: markerPlace,\n      });\n\n      infowindow.marker = marker;\n      infowindow.setContent(\n        \"<div >\" +\n          `<h2 style=\"color:black; text-align: center; padding-top: 20px;\">${marker.title}</h2><div align=\"center\"><a href='/learnmore?name=${marker.title}'>Learn more</a></div>`\n      );\n\n      this.state.map.panTo(marker.position);\n      this.state.map.setZoom(17);\n\n      infowindow.open(this.map, marker);\n      // Make sure the marker property is cleared if the infowindow is closed.\n      infowindow.addListener(\"closeclick\", function () {\n        infowindow.marker = null;\n        marker.setAnimation(null);\n      });\n    }\n  };\n  createRestaurants = async (data) => {\n    let res = [];\n    for (var i = 0; i < data.nearby_restaurants.length; i++) {\n      res.push(\n        <div key={i} align=\"left\" className=\"card-b\">\n          <div className=\"card-body\">\n            <h4 style={{ color: \"black\" }}>\n              {data.nearby_restaurants[i].restaurant.name}\n            </h4>\n            <h6 style={{ color: \"black\" }}>\n              {data.nearby_restaurants[i].restaurant.cuisines}\n            </h6>\n            <p\n              style={{ marginBottom: \"20px\", marginTop: \"10px\" }}\n              className=\"card-text\"\n            >\n              <span style={{ fontWeight: \"bold\" }} className=\"rating\">\n                Rating:{\" \"}\n              </span>\n              <span style={{ color: \"#f84969\", fontWeight: \"bold\" }}>\n                {\n                  data.nearby_restaurants[i].restaurant.user_rating\n                    .aggregate_rating\n                }\n                /5.0\n              </span>\n            </p>\n            <a\n              href={data.nearby_restaurants[i].restaurant.url}\n              style={{ fontSize: \"11pt\" }}\n              className=\"visit-button\"\n            >\n              Visit Website\n            </a>\n            <a\n              href={data.nearby_restaurants[i].restaurant.menu_url}\n              className=\"btn b2\"\n            >\n              Menu\n            </a>\n          </div>\n        </div>\n      );\n    }\n    this.setState({\n      restaurants: res,\n    });\n  };\n  getRestaurants = async (place) => {\n    if (place !== undefined) {\n      let lat = place.location.lat;\n      let lng = place.location.lng;\n      const response = await axios({\n        method: \"GET\",\n        url: `https://developers.zomato.com/api/v2.1/geocode?lat=${lat}&lon=${lng}`,\n        headers: {\n          \"user-key\": zomato_key,\n          \"content-type\": \"application/json\",\n        },\n      });\n      this.createRestaurants(response.data);\n    }\n  };\n  renderRestaurants = () => {\n    if (this.state.restaurants.length !== 0) {\n      return (\n        <div>\n          <h2 className=\"place-length\" align=\"left\">\n            Restaurants in{\" \"}\n            <strong className=\"place-strong\">{this.state.nearby_search}</strong>{\" \"}\n          </h2>\n          {this.state.restaurants}\n        </div>\n      );\n    } else {\n      return (\n        <div align=\"center\">\n          <h2 className=\"place-length\" align=\"left\">\n            No Restaurants\n          </h2>\n          <FontAwesomeIcon\n            className=\"calendar-ico calendar-icon-color\"\n            icon={faUtensils}\n          ></FontAwesomeIcon>\n          <div className=\"no-places-title\" align=\"center\">\n            <h3 className=\"nope-title\">Make Search to Receive Restaurants</h3>\n          </div>\n        </div>\n      );\n    }\n  };\n  formatDate(event) {\n    let date = new Date(event.datetime_local);\n    let f_date = date.toLocaleTimeString();\n    let date_substr =\n      f_date.substring(0, f_date.lastIndexOf(\":\")) +\n      \" \" +\n      f_date.substring(f_date.length - 2);\n    return date_substr;\n  }\n  getPopStyle(value) {\n    var num = new Number(value);\n    var per = Math.round(num.toString());\n    var color;\n    // Red - not very good\n    if (per <= 33) color = \"red\";\n    // Yellow - okay\n    if (per > 33 && per <= 66) color = \"yellow\";\n    // Green - pretty goog\n    if (per >= 66) color = \"#42f598\";\n\n    return { backgroundColor: color, width: per.toString() + \"%\" };\n  }\n  getNearbyPlaces = async (place) => {\n    if (place !== undefined) {\n      const response = await axios({\n        method: \"GET\",\n        url: `https://api.seatgeek.com/2/events?lat=${place.location.lat}&lon=${place.location.lng}&range=50mi&client_id=${seat_geek_client_id}`,\n      });\n      let res = [];\n      for (var i = 0; i < response.data.events.length; i++) {\n        let event = response.data.events[i];\n        let taxes = [];\n        let date = new Date(event.datetime_local);\n        let time_of_event = this.formatDate(event);\n        for (var j = 0; j < event.taxonomies.length; j++) {\n          taxes.push(\n            <span key={j} className=\"types-creation\">\n              {event.taxonomies[j].name}{\" \"}\n            </span>\n          );\n        }\n        res.push(\n          <div key={i}>\n            <div align=\"left\" className=\"card-b\">\n              <div className=\"card-body\">\n                <h4 style={{ color: \"black\" }} className=\"event-title\">\n                  {event.title}{\" \"}\n                  <span className=\"status-title\">\n                    {event.is_open ? (\n                      <span className=\"open\">Open</span>\n                    ) : (\n                      <span className=\"closed\">Closed</span>\n                    )}\n                  </span>\n                </h4>\n                <h5 className=\"event-taxes\">{taxes}</h5>\n                <h5>\n                  <span className=\"type-title\">Popularity: </span>\n                  <span className=\"popularity\">\n                    {(event.popularity * 100).toFixed(2)}%{\" \"}\n                  </span>\n                </h5>\n                <div className=\"progress\">\n                  <div\n                    className=\"progress-bar\"\n                    role=\"progressbar\"\n                    aria-valuenow=\"70\"\n                    aria-valuemin=\"0\"\n                    aria-valuemax=\"100\"\n                    style={this.getPopStyle(\n                      (event.popularity * 100).toFixed(2)\n                    )}\n                  ></div>\n                </div>\n                <p className=\"event-location\">\n                  {event.venue.address}, {event.venue.display_location}\n                </p>\n                <a\n                  href={event.url}\n                  style={{ fontSize: \"11pt\" }}\n                  className=\"visit-button\"\n                >\n                  Visit Website\n                </a>\n                <span className=\"event-date\">\n                  {date.toDateString()} - {time_of_event}\n                </span>\n              </div>\n            </div>\n            <hr className=\"hr-line\" />\n          </div>\n        );\n      }\n      this.setState({\n        nearby_search: place.name,\n        nearby_places: res,\n      });\n    } else {\n    }\n  };\n  renderNearbyPlaces() {\n    if (this.state.nearby_places.length !== 0) {\n      return (\n        <div>\n          <h2 className=\"place-length\" align=\"left\">\n            Events in{\" \"}\n            <strong className=\"place-strong\">{this.state.nearby_search}</strong>{\" \"}\n          </h2>\n          {this.state.nearby_places}\n        </div>\n      );\n    }\n    return (\n      <div align=\"center\">\n        <h2 className=\"place-length\" align=\"left\">\n          No Events\n        </h2>\n        <FontAwesomeIcon\n          className=\"calendar-ico calendar-icon-color\"\n          icon={faCalendarAlt}\n        ></FontAwesomeIcon>\n        <div className=\"no-places-title\" align=\"center\">\n          <h3 className=\"nope-title\">Make Search to Receive Events</h3>\n        </div>\n      </div>\n    );\n  }\n  getViews = async (place) => {\n    await fetch(\n      `https://api.unsplash.com/search/photos?page=1&query=${place.name}`,\n      {\n        headers: {\n          Authorization:\n            \"Client-ID ed4ea3b388f4503fa9a5817e2e5250171fd92b3b61ff520ff9f6027cff251a67\",\n        },\n      }\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({\n          imgs: data.results,\n        });\n        this.updateImage(data.results[0].urls.large);\n      })\n      .catch((err) => {\n        console.log(\"Error happened during fetching!\", err);\n      });\n  };\n  renderViews = () => {\n    if (this.state.imgs.length !== 0) {\n      let arr = [];\n\n      for (var i = 0; i < this.state.imgs.length; i++) {\n        var img = this.state.imgs[i];\n        arr.push(\n          <div key={i} align=\"center\">\n            <img\n              width=\"500\"\n              height=\"auto\"\n              src={img.urls.regular}\n              key={img.id}\n              alt=\"images of the chosen place\"\n            ></img>\n          </div>\n        );\n      }\n      return (\n        <div>\n          <h2 className=\"place-length\" align=\"left\">\n            Views of{\" \"}\n            <strong className=\"place-strong\">{this.state.nearby_search}</strong>{\" \"}\n          </h2>\n          {arr}\n        </div>\n      );\n    }\n    return (\n      <div align=\"center\">\n        <h2 className=\"place-length\" align=\"left\">\n          Views Unavailable\n        </h2>\n        <FontAwesomeIcon\n          className=\"img-ico img-icon-color\"\n          icon={faImages}\n        ></FontAwesomeIcon>\n        <div className=\"no-places-title\" align=\"center\">\n          <h3 className=\"nope-title\">Make Search to Receive Images</h3>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    let input;\n    return (\n      <div>\n        <div>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n          <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n          <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n          <script src=\"https://kit.fontawesome.com/a076d05399.js\"></script>\n          <Navbar items={[\"u\", \"u\", \"u\", \"u\"]} />\n\n          <div className=\"grid-container\">\n            <div className=\"column-left\">\n              <div>\n                <div align=\"left\" className=\"back-btn\">\n                  <span style={{ marginBottom: \"20px\" }}>\n                    <button\n                      style={{\n                        paddingLeft: \"15px\",\n                        paddingRight: \"15px\",\n                        paddingTop: \"5px\",\n                        paddingBottom: \"5px\",\n                        float: \"left\",\n                        marginRight: \"30px\",\n                        marginBottom: \"30px\",\n                        borderStyle: \"none\",\n                        borderRadius: \"5px\",\n                        color: \"white\",\n                        backgroundColor: \"#429ef5\",\n                        fontSize: \"13pt\",\n                      }}\n                      onClick={() => {\n                        localStorage.clear();\n                        window.location.href = \"/tripbuilder\";\n                      }}\n                      className=\"Button\"\n                    >\n                      Exit\n                    </button>\n                    <button\n                      style={{\n                        paddingLeft: \"15px\",\n                        paddingRight: \"15px\",\n                        paddingTop: \"5px\",\n                        paddingBottom: \"5px\",\n                        float: \"right\",\n                        marginRight: \"30px\",\n                        marginBottom: \"30px\",\n                        borderStyle: \"none\",\n                        borderRadius: \"5px\",\n                        color: \"white\",\n                        backgroundColor: \"#429ef5\",\n                        fontSize: \"13pt\",\n                      }}\n                      className=\"Button\"\n                      onClick={() => {\n                        window.location.href = \"/creation/tripSubmission\";\n                      }}\n                    >\n                      Submit Trip\n                    </button>\n                  </span>\n                </div>\n              </div>\n              <div align=\"left\" className=\"tab-comp\">\n                <Tabs>\n                  <div\n                    className=\"tab-content\"\n                    label=\"Trip Plan\"\n                    marker={faPlane}\n                  >\n                    <Provider store={store}>\n                      <VisibleTodoList />\n                    </Provider>\n                  </div>\n                  <div\n                    className=\"tab-content\"\n                    label=\"Events\"\n                    marker={faMapMarkerAlt}\n                  >\n                    {this.renderNearbyPlaces()}\n                  </div>\n                  <div\n                    className=\"tab-content\"\n                    label=\"Food\"\n                    marker={faHamburger}\n                  >\n                    {this.renderRestaurants()}\n                  </div>\n                  <div className=\"tab-content\" label=\"Views\" marker={faImages}>\n                    {this.renderViews()}\n                  </div>\n                  <div\n                    className=\"tab-content\"\n                    label=\"COVID Quick Look\"\n                    marker={faInfoCircle}\n                  >\n                    <CovidChart />\n                    <div style={{ marginTop: \"30px\" }}>\n                      <USTable />\n                    </div>\n                  </div>\n                </Tabs>\n              </div>\n            </div>\n            <div className=\"column-right\">\n              <div className=\"map-container\">\n                <input\n                  style={{ marginTop: \"15px\", marginRight: \"10px\" }}\n                  role=\"search\"\n                  type=\"text\"\n                  value={this.state.value}\n                  onChange={this.handleValueChange}\n                  id=\"search-input\"\n                  className=\"search-input-bar\"\n                ></input>\n                <span>\n                  <Provider store={store}>\n                    <AddTodo\n                      imageURL={this.state.list_image}\n                      place={this.state.place}\n                    />\n                  </Provider>\n                </span>\n                <ul className=\"locations-list\"></ul>\n                <div role=\"application\" className=\"map-creation\" ref=\"map\">\n                  loading map...\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCYqTOlIwQvYh30rp3riNLP137QWdTxzY4\",\n})(Creation);\n\nconnect()(AddTodo);\n"]},"metadata":{},"sourceType":"module"}