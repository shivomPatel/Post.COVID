{"ast":null,"code":"import React from\"react\";import Todo from\"./Todo\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faListUl}from\"@fortawesome/free-solid-svg-icons\";import\"./styles/todolist.css\";var TodoList=function TodoList(_ref){var todos=_ref.todos,removeTodo=_ref.removeTodo;if(todos.length===0)return/*#__PURE__*/React.createElement(\"div\",{align:\"center\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"place-length\",align:\"left\"},\"No Places\"),/*#__PURE__*/React.createElement(\"h3\",{className:\"start-title\"},\" Start Your Plan \"),/*#__PURE__*/React.createElement(FontAwesomeIcon,{className:\"list-icon list-icon-color\",icon:faListUl}),/*#__PURE__*/React.createElement(\"div\",{className:\"no-places-title\",align:\"center\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"nope-title\"},\"No Places yet\")));var count=1;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",{className:\"place-length\",align:\"left\"},\"Places ( \",/*#__PURE__*/React.createElement(\"span\",{className:\"length\"},todos.length),\" )\"),/*#__PURE__*/React.createElement(\"ul\",null,todos.map(function(todo,i){return/*#__PURE__*/React.createElement(Todo,Object.assign({key:i,index:count++},todo,{onClick:function onClick(){return removeTodo(todo.id);}}));})));};export default TodoList;","map":{"version":3,"sources":["/Users/Shivom/Desktop/Post.COVID4/client/src/pages/components/TodoList.js"],"names":["React","Todo","FontAwesomeIcon","faListUl","TodoList","todos","removeTodo","length","count","map","todo","i","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,QAAT,KAAyB,mCAAzB,CACA,MAAO,uBAAP,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA2B,IAAxBC,CAAAA,KAAwB,MAAxBA,KAAwB,CAAjBC,UAAiB,MAAjBA,UAAiB,CAC1C,GAAID,KAAK,CAACE,MAAN,GAAiB,CAArB,CACE,mBACE,2BAAK,KAAK,CAAC,QAAX,eACE,0BAAI,SAAS,CAAC,cAAd,CAA6B,KAAK,CAAC,MAAnC,cADF,cAIE,0BAAI,SAAS,CAAC,aAAd,sBAJF,cAKE,oBAAC,eAAD,EACE,SAAS,CAAC,2BADZ,CAEE,IAAI,CAAEJ,QAFR,EALF,cASE,2BAAK,SAAS,CAAC,iBAAf,CAAiC,KAAK,CAAC,QAAvC,eACE,0BAAI,SAAS,CAAC,YAAd,kBADF,CATF,CADF,CAeF,GAAIK,CAAAA,KAAK,CAAG,CAAZ,CACA,mBACE,4CACE,0BAAI,SAAS,CAAC,cAAd,CAA6B,KAAK,CAAC,MAAnC,2BACW,4BAAM,SAAS,CAAC,QAAhB,EAA0BH,KAAK,CAACE,MAAhC,CADX,MADF,cAIE,8BACGF,KAAK,CAACI,GAAN,CAAU,SAACC,IAAD,CAAOC,CAAP,CAAa,CACtB,mBACE,oBAAC,IAAD,gBACE,GAAG,CAAEA,CADP,CAEE,KAAK,CAAEH,KAAK,EAFd,EAGME,IAHN,EAIE,OAAO,CAAE,yBAAMJ,CAAAA,UAAU,CAACI,IAAI,CAACE,EAAN,CAAhB,EAJX,GADF,CAQD,CATA,CADH,CAJF,CADF,CAmBD,CArCD,CAkDA,cAAeR,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Todo from \"./Todo\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faListUl } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./styles/todolist.css\";\n\nconst TodoList = ({ todos, removeTodo }) => {\n  if (todos.length === 0)\n    return (\n      <div align=\"center\">\n        <h2 className=\"place-length\" align=\"left\">\n          No Places\n        </h2>\n        <h3 className=\"start-title\"> Start Your Plan </h3>\n        <FontAwesomeIcon\n          className=\"list-icon list-icon-color\"\n          icon={faListUl}\n        ></FontAwesomeIcon>\n        <div className=\"no-places-title\" align=\"center\">\n          <h3 className=\"nope-title\">No Places yet</h3>\n        </div>\n      </div>\n    );\n  let count = 1;\n  return (\n    <div>\n      <h2 className=\"place-length\" align=\"left\">\n        Places ( <span className=\"length\">{todos.length}</span> )\n      </h2>\n      <ul>\n        {todos.map((todo, i) => {\n          return (\n            <Todo\n              key={i}\n              index={count++}\n              {...todo}\n              onClick={() => removeTodo(todo.id)}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}