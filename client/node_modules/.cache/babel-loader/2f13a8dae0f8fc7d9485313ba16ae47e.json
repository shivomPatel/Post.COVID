{"ast":null,"code":"const todos = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [...state, {\n        id: action.id,\n        text: action.text,\n        url: action.url,\n        completed: false\n      }];\n\n    case \"TOGGLE_TODO\":\n      return state.map(todo => todo.id === action.id ? { ...todo,\n        completed: !todo.completed\n      } : todo);\n\n    case \"REMOVE_TODO\":\n      let arr = [];\n\n      for (var i = 0; i < state.length; i++) {\n        if (state[i].id === action.id) {\n          continue;\n        } else {\n          arr.push(state[i]);\n        }\n      }\n\n      return arr;\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"sources":["/Users/Shivom/Desktop/Post.COVID4/client/src/pages/reducers/todos.js"],"names":["todos","state","action","type","id","text","url","completed","map","todo","arr","i","length","push"],"mappings":"AAAA,MAAMA,KAAK,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,CACL,GAAGF,KADE,EAEL;AACEG,QAAAA,EAAE,EAAEF,MAAM,CAACE,EADb;AAEEC,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAFf;AAGEC,QAAAA,GAAG,EAAEJ,MAAM,CAACI,GAHd;AAIEC,QAAAA,SAAS,EAAE;AAJb,OAFK,CAAP;;AASF,SAAK,aAAL;AACE,aAAON,KAAK,CAACO,GAAN,CAAWC,IAAD,IACfA,IAAI,CAACL,EAAL,KAAYF,MAAM,CAACE,EAAnB,GAAwB,EAAE,GAAGK,IAAL;AAAWF,QAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAA5B,OAAxB,GAAkEE,IAD7D,CAAP;;AAIF,SAAK,aAAL;AACE,UAAIC,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACW,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAIV,KAAK,CAACU,CAAD,CAAL,CAASP,EAAT,KAAgBF,MAAM,CAACE,EAA3B,EAA+B;AAC7B;AACD,SAFD,MAEO;AACLM,UAAAA,GAAG,CAACG,IAAJ,CAASZ,KAAK,CAACU,CAAD,CAAd;AACD;AACF;;AACD,aAAOD,GAAP;;AACF;AACE,aAAOT,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,eAAeD,KAAf","sourcesContent":["const todos = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          url: action.url,\n          completed: false,\n        },\n      ];\n    case \"TOGGLE_TODO\":\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n\n    case \"REMOVE_TODO\":\n      let arr = [];\n      for (var i = 0; i < state.length; i++) {\n        if (state[i].id === action.id) {\n          continue;\n        } else {\n          arr.push(state[i]);\n        }\n      }\n      return arr;\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}